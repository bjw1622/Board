
@{
    ViewBag.Title = "Detail";
    //var maxReplyID = @ViewBag.MaxReplyID;
    string email = ViewBag.detailInfo.Email;

}
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
</head>
<body>
    <h2>상세</h2>
    <div class="form-group">
        <label>제목</label>
        <input type="text" class="form-control" name="Title" id="title" value="@ViewBag.detailInfo.Title">
    </div>

    <div class="form-group">
        <label>작성자</label>
        <input type="text" class="form-control" name="Name" readonly value="@ViewBag.detailInfo.Name">
    </div>

    <div class="form-group">
        <label for="exampleFormControlTextarea1">내용</label>
        <textarea class="form-control" name="MainContent" id="mainContent" rows="5">@ViewBag.detailInfo.Content</textarea>
    </div>
    <hr />
    @*<div class="form-group">
        <h4>첨부 파일</h4>
        @if (@ViewBag.GetFileImg[0].FileName != "")
        {
            <a href="~/Uploads/@ViewBag.GetFileImg[0].FileName" download="@ViewBag.GetFileImg[0].FileName">
                <img src="~/Uploads/@ViewBag.GetFileImg[0].FileName" alt="첨부 파일 없음">
            </a>
        }
        @if (@ViewBag.GetFileImg[0].FileName2 != "")
        {
            <a href="~/Uploads/@ViewBag.GetFileImg[0].FileName2" download="@ViewBag.GetFileImg[0].FileName2">
                <img src="~/Uploads/@ViewBag.GetFileImg[0].FileName2" alt="첨부 파일 없음">
            </a>
        }

    </div>*@
    <hr />
    @*<button class="btn btn-primary" id="recommand">추천 : @ViewBag.detailInfo.RecommandCount</button>*@

    @if (Session["Email"].ToString() == email)
    {
        <div>
            <button class="btn btn-info" onclick="update()">수정</button>
            <button class="btn btn-danger" onclick="deleteBoard()">삭제</button>
        </div>
    }

    <hr />
    
    <div class="input-group mb-3" style="display:flex;">
        <input type="text" class="form-control" style="margin-right : 5px;" id="reply">
        <button class="btn btn-outline-secondary" id="reply-btn" type="button">댓글 입력</button>
    </div>
    <hr />

    @*<h3>댓글 목록</h3>
    <div id="reply-content">
        @for (var i = 0; i <= ViewBag.replyList.Count - 1; i++)
        {
            <div class="@ViewBag.replyList[i].ReplyID" ; style="margin-bottom:15px;">
                <input type="text" class="form-control" value="@ViewBag.replyList[i].ReplyContent" readonly>
                <button class="re-reply-btn" onclick="ReReplyButton(event)" name="@ViewBag.replyList[i].ReplyID">답글 달기</button>
                <button onclick="ReadReReplyList(event)" name="@ViewBag.replyList[i].ReplyID">답글 보기</button>
                <button class="remove-btn" name="@ViewBag.replyList[i].Email @ViewBag.replyList[i].ReplyID @ViewBag.replyList[i].ParentReplyID" onclick="ReplyRemove(event)">삭제</button>
            </div>
        }
    </div>*@
</body>
</html>
<script>
    @*let recommandNumber = parseInt((document.querySelector('#recommand').innerHTML).replace(/[^0-9]/g, ''));
    let maxReplyID = @maxReplyID;

    // 일반 댓글 등록
    document.querySelector('#reply-btn').addEventListener('click', () => {
        const param = {
            BoardNum: window.location.pathname.split('/')[3],
            ReplyID: maxReplyID + 1,
            ReplyContent: document.querySelector('#reply').value,
            ParentReplyID: 0,
            Email: "@Session["Email"]",

        };
        $.ajax({
            url: '/Board/Reply',
            type: 'post',
            dataType: "json",
            data: JSON.stringify(param),
            contentType: "application/json",
            success: function (data) {
                alert('댓글이 작성 되었습니다.')
                $('#reply-content').empty();
                data.replyList.forEach((item) => {
                    $('#reply-content').append(readReply(item))
                })
                document.querySelector('#reply').value = "";
                maxReplyID += 1;
            },
            error: function () {
                alert('댓글을 입력해주세요.');
            }
        });
    })*@

    // 게시글 수정
    function update() {
        const param = {
            "No": window.location.pathname.split('/')[3],
            "Title": $('#title').val(),
            "Content": document.querySelector('#mainContent').value,
        }
        $.ajax({
            url: '/Board/Update',
            type: 'post',
            data: JSON.stringify(param),
            contentType: "application/json",
            success: function () {
                alert("수정 되었습니다.");
            },
            error: function () {
            }
        });
    };

    // 게시글 삭제
    function deleteBoard ()
    {
        const flag = confirm('정말 삭제하시겠습니까?');
        if (flag === true) {
            alert('삭제 되었습니다.');
            location.href = "/Board/Delete/" + window.location.pathname.split('/')[3];
        }
    };

    @*// 게시글 추천
    document.querySelector('#recommand').addEventListener('click', () => {

        const param = {
            "BoardNum": window.location.pathname.split('/')[3],
            "Email": "@Session["Email"]",
            "RecommandCount": recommandNumber
        }

        $.ajax({
            url: '/Board/RecommandUpdate',
            type: 'post',
            dataType: "json",
            data: JSON.stringify(param),
            contentType: "application/json",
            success: function (data) {
                if (data.recommand == -1 || data.recommand == 0) {
                    alert('추천 되었습니다.');
                    recommandNumber += 1;
                }
                else if (data.recommand == 1) {
                    alert('추천이 취소 되었습니다.');
                    recommandNumber -= 1;
                }
                document.querySelector('#recommand').innerHTML = `추천 : ${data.RecommandCount}`;
            },
            error: function () {
            }
        });
    })*@

    @*function ReReply(event) {
        const param = {
            BoardNum: window.location.pathname.split('/')[3],
            ReplyID: maxReplyID + 1,
            ReplyContent: document.getElementById(maxReplyID).value,
            ParentReplyID: event.target.parentElement.className,
            Email: "@Session["Email"]",
        }

        $.ajax({
            url: '/Board/Reply',
            type: 'post',
            dataType: "json",
            data: JSON.stringify(param),
            contentType: "application/json",
            success: function (data) {
                alert('답글이 작성 되었습니다.')
                $('#reply-content').empty();
                data.replyList.forEach((item) => {
                    $('#reply-content').append(readReply(item))
                })
                maxReplyID += 1;
            },
            error: function () {
                alert('댓글을 입력해주세요.');
            }
        });
    }

    function ReReplyButton(event) {
        // 부모 ReplyID
        const ParentReplyID = event.target.name;
        // 대댓글 창 그려주기
        $(`.${ParentReplyID}`).first().append(createReReply(ParentReplyID))
        $('.re-reply-btn').hide();
    }

    function ReadReReplyList(event) {
        const param = {
            BoardNum: window.location.pathname.split('/')[3],
            ParentReplyID: event.target.name,
        }
        $.ajax({
            url: '/Board/ReadReReplyList',
            type: 'post',
            dataType: "json",
            data: JSON.stringify(param),
            contentType: "application/json",
            success: function (data) {
                $(`.${param.ParentReplyID}`).children('div').remove();
                data.forEach((item) => {
                    $(`.${param.ParentReplyID}`).append(createReReplyList(item))
                })
                $('.re-reply-btn').show();
            },
            error: function () {
                alert('답글이 없습니다..');
            }
        });
    }

    function ReplyRemove(event) {
        let flag = false;
        const Info = ((event.target.name).split(" "));
        if ("@Session["Email"]" === Info[0]) {
            flag = confirm('댓글을 삭제 하시겠습니까?');
        }
        else {
            alert('삭제 권한이 없습니다');
        }
        if (flag === true) {
            const param = {
                BoardNum: window.location.pathname.split('/')[3],
                ReplyID: Info[1],
            }
            if (Info[2] == 0) {
                $.ajax({
                    url: '/Board/RemoveReply',
                    type: 'post',
                    data: JSON.stringify(param),
                    contentType: "application/json",
                    success: function () {
                        alert('삭제 되었습니다.');
                        location.reload();
                    },
                    error: function () {
                    }
                });
            }
            // 자식 댓글
            else {
                $.ajax({
                    url: '/Board/RemoveReReply',
                    type: 'post',
                    data: JSON.stringify(param),
                    contentType: "application/json",
                    success: function () {
                        alert('삭제 되었습니다.')
                        location.reload();
                    },
                    error: function () {
                    }
                });

            }
        }
    }*@

    // 대댓글 창 생성
    function createReReply(ParentReplyID) {
        return `
        <div class="${ParentReplyID}" style="margin:5px 0px 15px 50px; display:flex;">
            <input type="text" id = ${maxReplyID} class="form-control"/>
            <button onclick="ReReply(event)">답글 입력</button>
          </div >
        `
    }
    // 댓글 불러오기
    function readReply(item) {
        return `
        <div class="${item.ReplyID}"; style="margin-bottom:15px;">
            <input type="text" class="form-control" value="${item.ReplyContent}" readonly />
            <button class="re-reply-btn" onclick="ReReplyButton(event)" name=${item.ReplyID}>답글 달기</button>
            <button onclick="ReadReReplyList(event)" name=${item.ReplyID}>답글 보기</button>
            <button class="remove-btn" name="${item.Email} ${item.ReplyID} ${item.ParentReplyID}" onclick="ReplyRemove(event)">삭제</button>
        </div>
            `
    }
    // 대댓글 불러오기
    function createReReplyList(item) {
        return `
        <div class="${item.ReplyID}"; style="margin:5px 0px 15px 50px;">
            <input type="text" class="form-control" value="${item.ReplyContent}" readonly />
            <button class="remove-btn" name="${item.Email} ${item.ReplyID} ${item.ParentReplyID}" onclick="ReplyRemove(event)">삭제</button>
        </div>
            `
    }
</script>