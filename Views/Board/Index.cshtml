@{
    ViewBag.Title = "게시판";
}
@{
    // 한 페이지에 나타내고 싶은 게시글 수
    var boardCount = 20;
    // 총 페이징 버튼 갯수
    var totalPage = (ViewBag.Board.Count / boardCount) + 2;
}
<h2>게시판</h2>
<div>
    <select class="form-select" id="board-count">
        <option value="20">20</option>
        <option value="30">30</option>
        <option value="40">40</option>
        <option value="50">50</option>
    </select>
    <select class="form-select" id="find-value">
        <option value="Name">작성자</option>
        <option value="Title">제목</option>
    </select>
    <input type="text" id="find" />
    <button id="find-board">검색</button>
</div>
<table class="table">
    <thead>
        <tr>
            <th class="text-center" scope="col">#</th>
            <th class="text-center" scope="col">제목</th>
            <th class="text-center" scope="col">작성자</th>
            <th class="text-center" scope="col">댓글</th>
            <th class="text-center" scope="col">추천</th>
        </tr>
    </thead>
    <tbody id="tbody">
        @for(var i = 0; i < @boardCount; i++){
        <tr class="text-center">
            <td class="text-center">@ViewBag.Board[i].BoardNum</td>
            <td class="text-center"><a href="/Board/Detail/@ViewBag.Board[i].BoardNum">@ViewBag.Board[i].Title</a></td>
            <td class="text-center">@ViewBag.Board[i].Name</td>
            <td class="text-center">@ViewBag.Board[i].ReplyCount</td>
            <td class="text-center">@ViewBag.Board[i].RecommandCount</td>
        </tr>}
    </tbody>

</table>
    <div id="page" style="text-align: center;">
            @for (var i = 1; i < totalPage; i++)
            {
                if (i == 1)
                {
                    <button class=" page-btn btn btn-light btn-info" onclick="paging()" value=@i>@i</button>
                }
                else
                {
                    <button class="page-btn btn btn-light" onclick="paging()" value=@i>@i</button>
                }
            }
</div>
<button class="btn btn-primary" onclick="location.href='/Board/Write'">글쓰기</button>

<script>
    function createRow(item) {
        return `
        <tr class="text-center">
                    <td class="text-center">${item.BoardNum}</td>
                    <td class="text-center"><a href="/Board/Detail/${item.BoardNum}">${item.Title}</a></td>
                    <td class="text-center">${item.Name}</td>
                    <td class="text-center">${item.ReplyCount}</td>
                    <td class="text-center">${item.RecommandCount}</td>
                </tr>`
    }

    // 페이징 나타내기
    document.querySelector('#board-count').addEventListener('click', () => {
        $('#page').empty();
        let totalPageCount = @Html.Raw(ViewBag.Board.Count);
        for (let i = 1; i < (totalPageCount / document.querySelector('#board-count').value)+1; i++)
        {
            if (i === 1) {
                $('#page').append(` <button class="page-btn btn btn-light btn-info" onclick="paging()" value=${i} >${i}</button>`);
            }
            else {
                $('#page').append(` <button class="page-btn btn btn-light" onclick="paging()" value=${i} >${i}</button>`);
            }
        }
        init();
        const param = {
            PageNumber: 1,
            PageCount: $('#board-count').val(),

        }
        $.ajax({
            url: '/Board/IndexPaging',
            type: 'post',
            dataType: "json",
            data: JSON.stringify(param),
            contentType: "application/json",
            success: function (data) {
                $('#tbody').empty();
                if (data !== "") {
                    data.forEach((item) => {
                        $('#tbody').append(createRow(item))

                    })
                }
            },
            error: function () {
            }
        });
    })

    //검색과 페이징 동시에 나타내기
    document.querySelector('#find-board').addEventListener('click', () => {
        const param = {
            PageNumber: 1,
            PageCount: $('#board-count').val(),
            Variable: document.querySelector("#find-value").value,
            Input: $('#find').val(),
        }
        console.log(param)
        $.ajax({
            url: '/Board/PageAndFind',
            type: 'post',
            dataType: "json",
            data: JSON.stringify(param),
            contentType: "application/json",
            success: function (data) {
                data.List = [];
                data.TotalCount = 120;
                // TO DO
                // totalPageCount가 게시판 전체 total이 아닌 검색 했을 때의 count를 불러오기
                $('#page').empty();
                for (let i = 1; i < (data.TotalCount / document.querySelector('#board-count').value) + 1; i++) {
                    if (i === 1) {
                        $('#page').append(` <button class="page-btn btn btn-light btn-info" onclick="paging()" value=${i} >${i}</button>`);
                    }
                    else {
                        $('#page').append(` <button class="page-btn btn btn-light" onclick="paging()" value=${i} >${i}</button>`);
                    }
                }
                $('#tbody').empty();
                init();
                if (data !== "") {
                    data.forEach((item) => {
                        $('#tbody').append(createRow(item))
                    })
                }
            },
            error: function () {
            }
        });
    })

    // 페이징 이동시 해당 개수 나타내는 method
    function paging() {
        const param = {
            PageNumber: event.target.value,
            PageCount: $('#board-count').val()
        }
        $.ajax({
            url: '/Board/IndexPaging',
            type: 'post',
            dataType: "json",
            data: JSON.stringify(param),
            contentType: "application/json",
            success: function (data) {
                $('#tbody').empty();
                if (data !== "") {
                    data.forEach((item) => {
                        $('#tbody').append(createRow(item))
                    })
                }
            },
            error: function () {
            }
        });
    }

    //페이징 버튼 색깔 변경
    const buttonClass = document.getElementsByClassName("page-btn");
    function handleClick(event) {
        if (event.target.classList[3] === "btn-info") {
            event.target.classList.remove("btn-info");
        } else {
            for (var i = 0; i < buttonClass.length; i++) {
                buttonClass[i].classList.remove("btn-info");
            }
            event.target.classList.add("btn-info");
        }
    }
    function init() {
        for (var i = 0; i < buttonClass.length; i++) {
            buttonClass[i].addEventListener("click", handleClick);
        }
    }
    init();
</script>